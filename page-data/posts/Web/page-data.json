{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Web",
    "result": {"pageContext":{"currentCategory":"Web","categories":["All","Web"],"edges":[{"node":{"id":"f5fc09f2-87c9-5b83-af04-3ad744acb956","excerpt":"thumbnail 이 포스트에서는 CORS에 대한 이슈에 대해서 다뤄볼려고 합니다. 웹 개발을 하다보면 한번쯤 겪게되는 이슈로 클라이언트와 서버의 오리진이 다를 때 발생하는 이슈입니다. 🤔 CORS? 크로스 도메인? CORS는 Cross Origin Resource Sharing의 약자로 도메인 또는 포트가 다른 서버의 자원을 요청하는 매커니즘을 말합니다. 이때 요청을 할때는 cross-origin HTTP 에 의해 요청됩니다. 하지만 동일 출처 정책(same-origin policy) 때문에 CORS 같은 상황이 발생 하면 외부서버에 요청한 데이터를 브라우저에서 보안목적으로 차단합니다. 그로 인해 정상적으로 데이터를 받을 수 없습니다.\r\nerror 동일 출처 정책(same-origin policy)\r\n불러온문서나 스크립트가 다른 출처에서 가져온 리소스와 상호작용하는 것을 제한하는 중요한 보안 방식입니다. 이것은 잠재적 악성 문서를 격리하여, 공격 경로를 줄이는데 도움이 됩니다. …","fields":{"slug":"/cors에-대한-간단한-고찰/"},"frontmatter":{"categories":"Web","title":"CORS에 대한 간단한 고찰","date":"September 23, 2019"}},"next":null,"previous":null}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}