{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/React",
    "result": {"pageContext":{"currentCategory":"React","categories":["All","Life","JavaScript","Web","React","Docker"],"edges":[{"node":{"id":"a0839e1c-8fe6-5f85-9dbe-291a62f7e951","excerpt":"2021/05/17 업데이트 ⚠️ Notice ⚠️ 해당 포스트는 Storybook 5버전을 기준으로 작성된 포스트입니다. 최신 버전에 대한 튜토리얼은 스토리북 문서를 찾아보시는 걸 추천드립니다.  이번 포스트에서는 Storybook 이라는 것을 알아볼까 합니다. Storybook은 UI 구성 요소(컴포넌트)를 개발하기위한 오픈 소스 도구입니다. 예전에는 페이지 단위의 개발을 하였다면 요즘에는 컴포넌트 단위로 프론트엔드를 개발하고, 많은 분들이 React, Vue나 Angular를 이용하여 개발합니다. 여기서 컴포넌트는 외부에 영향을 받지 않고 독립적인 개체를 이루며 재사용가능한 단위라고 할 수 있습니다. 이러한 특성을 잘 지켜가며 컴포넌트를 개발할 수 있도록 도와주는 오픈 소스 라이브러리가 바로 Storybook입니다. 🤔 문제점 저와 같은 경우에는 보통 React.js를 이용하여 프론트 개발을 합니다. 하지만 항상 컴포넌트를 설계할 때, 필요한게 생길 때마다 해당 케이스에 맞게 컴…","fields":{"slug":"/Storybook-작성하기/"},"frontmatter":{"categories":"React","title":"Storybook 작성하기","date":"November 14, 2019"}},"next":{"fields":{"slug":"/How-to-use-TypeScript/"}},"previous":{"fields":{"slug":"/나의-첫-인터뷰-질문-리스트/"}}},{"node":{"id":"85ca9fa0-858f-58b1-974a-7eb9e1886ecb","excerpt":"오늘 써볼 글은 React의 상태관리를 할 때 많이 사용하는 라이브러리인 Mobx의 데코레이터를 CRA에서  없이 사용하는 법을 알아보겠습니다 :) 보통은 Mobx 말고도 데코레이터를 사용할 수 있습니다. 하지만 Mobx를 사용하면서 데코레이터를 많이 사용하고 react에서 데코레이터를 사용할 때 여러가지 설정에 관한 문제를 겪었기 때문에 이를 해결하고자 하는 글을 써봅니다. 🤔 eject 란? 기본적으로 CRA로 만든 프로젝트에서 를 하면 숨겨져 있던 웹팩, 바벨 등의 설정을 보여주고 이것을 커스터마이징 할 수 있도록 해주는 명령어입니다. 주의 : 한번 eject를 하면 이전 상태로 돌아갈 수 없습니다. 🚫 eject를 했을 때 생길 수 있는 문제 하지만 eject를 했을 때 다음과 같은 문제 아닌 문제가 발생합니다. CRA의 웹팩, 바벨과 같은 모든 configuration를 직접 관리해줘야 한다.\r\n(익숙하지 않다면 관리하는 것이 까다롭다) One Build Dependenc…","fields":{"slug":"/Mobx-데코레이터-yarn-eject-없이-사용하기/"},"frontmatter":{"categories":"React","title":"React - eject 없이 Mobx 데코레이터 사용하기","date":"October 27, 2019"}},"next":{"fields":{"slug":"/docker-1-기본명령어/"}},"previous":{"fields":{"slug":"/HTTP-REST-API-란/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}